import java.io.*;

File jfxFolder = new File( basedir, "target/jfx" );
if( !jfxFolder.exists() ){
    throw new Exception( "there should be a jfx-folder!");
}

File jfxAppFolder = new File( jfxFolder, "app" );
if( !jfxAppFolder.exists() ){
    throw new Exception( "there should be a jfx-app-folder!");
}

File jfxNativeAppFolder = new File( jfxFolder, "native" );
if( !jfxNativeAppFolder.exists() ){
    throw new Exception( "there should be a jfx-native-folder!");
}

// ugly, but works
File workedAroundConfigurationFile = new File( basedir, "target/jfx/native/javafx-maven-plugin-test-15-native-launcher-linux-workaround124-skipped-1.0/app/javafx-maven-plugin-test-15-native-launcher-linux-workaround124-skipped-1.cfg" );
if( workedAroundConfigurationFile.exists() ){
    throw new Exception( "workaround shouldn't work here!");
}
File configurationFile = new File( basedir, "target/jfx/native/javafx-maven-plugin-test-15-native-launcher-linux-workaround124-skipped-1.0/app/javafx-maven-plugin-test-15-native-launcher-linux-workaround124-skipped-1.0.cfg" );
if( !configurationFile.exists() ){
    throw new Exception( "configfile should exist");
}
